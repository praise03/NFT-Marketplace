/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTMarketplace,
  NFTMarketplaceInterface,
} from "../../contracts/NFTMarketplace";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NftCancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NftListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "NftSale",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct NFTMarketplace.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "lowerPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611833806100206000396000f3fe6080604052600436106100545760003560e01c806207df301461005957806388700d1c14610097578063a82ba76f146100d4578063ad05f1b4146100f0578063b2464e7e14610119578063b2ddee0614610142575b600080fd5b34801561006557600080fd5b50610080600480360381019061007b9190611055565b61016b565b60405161008e9291906110b3565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b99190611055565b6101bc565b6040516100cb9190611129565b60405180910390f35b6100ee60048036038101906100e99190611055565b61028c565b005b3480156100fc57600080fd5b5061011760048036038101906101129190611144565b6105d7565b005b34801561012557600080fd5b50610140600480360381019061013b9190611144565b61097b565b005b34801561014e57600080fd5b5061016960048036038101906101649190611055565b610d40565b005b6000602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6101c4610f8c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508091505092915050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206001015411610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a906111f4565b60405180910390fd5b60008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050806000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044a90611260565b60405180910390fd5b80602001513414610499576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610490906112cc565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166342842e0e826000015133876040518463ffffffff1660e01b81526004016104da939291906112ec565b600060405180830381600087803b1580156104f457600080fd5b505af1158015610508573d6000803e3d6000fd5b505050506000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550507ff1152c51a36917674e09e30d4fc2207d96b4ff92c933c3868ecd81fedad24dbf8585348460000151336040516105c8959493929190611323565b60405180910390a15050505050565b82823360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161062f9190611376565b602060405180830381865afa15801561064c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067091906113a6565b73ffffffffffffffffffffffffffffffffffffffff16146106c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bd9061141f565b60405180910390fd5b86600081905060008173ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b815260040161070992919061143f565b602060405180830381865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a91906114a0565b90508061078c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078390611519565b60405180910390fd5b600088116107cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c6906115ab565b60405180910390fd5b60008060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b81526020019081526020016000206001015414610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085b9061163d565b60405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001898152506000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050507ff474454cf1413cb7263b123eef74f64fe95741be94d66c78f4715d9ab12048758a8a8a33604051610967949392919061165d565b60405180910390a150505050505050505050565b82823360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016109d39190611376565b602060405180830381865afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1491906113a6565b73ffffffffffffffffffffffffffffffffffffffff1614610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a619061141f565b60405180910390fd5b86600081905060008173ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b8152600401610aad92919061143f565b602060405180830381865afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee91906114a0565b905080610b30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2790611519565b60405180910390fd5b898960008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206001015411610bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbe906111f4565b60405180910390fd5b60008a11610c0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0190611714565b60405180910390fd5b896000808e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d81526020019081526020016000206001015411610c9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c95906117a6565b60405180910390fd5b896000808e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d8152602001908152602001600020600101819055507ff474454cf1413cb7263b123eef74f64fe95741be94d66c78f4715d9ab12048758c8c8c33604051610d2a949392919061165d565b60405180910390a1505050505050505050505050565b81813360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610d989190611376565b602060405180830381865afa158015610db5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd991906113a6565b73ffffffffffffffffffffffffffffffffffffffff1614610e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e269061141f565b60405180910390fd5b858560008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206001015411610ec6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebd906111f4565b60405180910390fd5b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550507f4801c088490b43f3129354c956f99ef3c8f87882dffbb9fb8a81df38c168b738888833604051610f7a939291906117c6565b60405180910390a15050505050505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fec82610fc1565b9050919050565b610ffc81610fe1565b811461100757600080fd5b50565b60008135905061101981610ff3565b92915050565b6000819050919050565b6110328161101f565b811461103d57600080fd5b50565b60008135905061104f81611029565b92915050565b6000806040838503121561106c5761106b610fbc565b5b600061107a8582860161100a565b925050602061108b85828601611040565b9150509250929050565b61109e81610fe1565b82525050565b6110ad8161101f565b82525050565b60006040820190506110c86000830185611095565b6110d560208301846110a4565b9392505050565b6110e581610fe1565b82525050565b6110f48161101f565b82525050565b60408201600082015161111060008501826110dc565b50602082015161112360208501826110eb565b50505050565b600060408201905061113e60008301846110fa565b92915050565b60008060006060848603121561115d5761115c610fbc565b5b600061116b8682870161100a565b935050602061117c86828701611040565b925050604061118d86828701611040565b9150509250925092565b600082825260208201905092915050565b7f54686973204974656d206973206e6f74206c697374656420666f722073616c65600082015250565b60006111de602083611197565b91506111e9826111a8565b602082019050919050565b6000602082019050818103600083015261120d816111d1565b9050919050565b7f4275794e66743a20596f75206f776e2074686973204e46540000000000000000600082015250565b600061124a601883611197565b915061125582611214565b602082019050919050565b600060208201905081810360008301526112798161123d565b9050919050565b7f4275794e66743a204e6f7420656e6f7567682045544800000000000000000000600082015250565b60006112b6601683611197565b91506112c182611280565b602082019050919050565b600060208201905081810360008301526112e5816112a9565b9050919050565b60006060820190506113016000830186611095565b61130e6020830185611095565b61131b60408301846110a4565b949350505050565b600060a0820190506113386000830188611095565b61134560208301876110a4565b61135260408301866110a4565b61135f6060830185611095565b61136c6080830184611095565b9695505050505050565b600060208201905061138b60008301846110a4565b92915050565b6000815190506113a081610ff3565b92915050565b6000602082840312156113bc576113bb610fbc565b5b60006113ca84828501611391565b91505092915050565b7f596f7520646f206e6f74206f776e2074686973204e4654000000000000000000600082015250565b6000611409601783611197565b9150611414826113d3565b602082019050919050565b60006020820190508181036000830152611438816113fc565b9050919050565b60006040820190506114546000830185611095565b6114616020830184611095565b9392505050565b60008115159050919050565b61147d81611468565b811461148857600080fd5b50565b60008151905061149a81611474565b92915050565b6000602082840312156114b6576114b5610fbc565b5b60006114c48482850161148b565b91505092915050565b7f4d61726b6574706c616365206e6f7420676976656e20617070726f76616c0000600082015250565b6000611503601e83611197565b915061150e826114cd565b602082019050919050565b60006020820190508181036000830152611532816114f6565b9050919050565b7f4c697374696e673a205072696365204d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b6000611595602583611197565b91506115a082611539565b604082019050919050565b600060208201905081810360008301526115c481611588565b9050919050565b7f54686973204974656d20697320616c7265616479206c697374656420666f722060008201527f73616c6500000000000000000000000000000000000000000000000000000000602082015250565b6000611627602483611197565b9150611632826115cb565b604082019050919050565b600060208201905081810360008301526116568161161a565b9050919050565b60006080820190506116726000830187611095565b61167f60208301866110a4565b61168c60408301856110a4565b6116996060830184611095565b95945050505050565b7f4c697374696e673a204e6577205072696365204d75737420626520677265617460008201527f6572207468616e20300000000000000000000000000000000000000000000000602082015250565b60006116fe602983611197565b9150611709826116a2565b604082019050919050565b6000602082019050818103600083015261172d816116f1565b9050919050565b7f4c697374696e673a204e6577205072696365204d757374206265206c6573736560008201527f72207468616e204f6c6420707269636500000000000000000000000000000000602082015250565b6000611790603083611197565b915061179b82611734565b604082019050919050565b600060208201905081810360008301526117bf81611783565b9050919050565b60006060820190506117db6000830186611095565b6117e860208301856110a4565b6117f56040830184611095565b94935050505056fea2646970667358221220adc3d2a111eb91a84a45c6e8f0f5ba59a20f16d578eaf79c5c0e61818cebac9064736f6c63430008130033";

type NFTMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketplace__factory extends ContractFactory {
  constructor(...args: NFTMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarketplace> {
    return super.deploy(overrides || {}) as Promise<NFTMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarketplace {
    return super.attach(address) as NFTMarketplace;
  }
  override connect(signer: Signer): NFTMarketplace__factory {
    return super.connect(signer) as NFTMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketplaceInterface {
    return new utils.Interface(_abi) as NFTMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketplace;
  }
}
